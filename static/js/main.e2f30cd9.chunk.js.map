{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid_tracker.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","modifiedData","console","log","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","covidTrackerImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2f30cd9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react'\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\n\nimport styles from './Cards.module.css'\n\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }}) =>{\n\n    if(!confirmed){\n        return 'Loading...'\n    }\n\n    return(\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of infected cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards","import axios from 'axios'\n\nconst url = 'https://covid19.mathdro.id/api'\n\nexport const fetchData = async(country) =>{\n    let changeableUrl = url\n\n    if(country){\n        changeableUrl = `${url}/countries/${country}`\n    }\n\n    try{\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl)\n\n        const modifiedData = { confirmed, recovered, deaths, lastUpdate }\n\n        return modifiedData\n    }catch (error){\n        console.log(error)\n    }\n}\n\nexport const fetchDailyData = async() =>{\n    try{\n        const { data } = await axios.get(`${url}/daily`)\n        \n        const modifiedData = data.map((dailyData)=>({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate\n        }))\n\n        return modifiedData\n    }catch (error){\n        console.log(error)\n    }\n}\n\nexport const fetchCountries = async ()=>{\n    try{\n        const {data:{ countries }} = await axios.get(`${url}/countries`)\n        \n        return countries.map((country)=> country.name)\n    }catch (error){\n        console.log(error)\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { fetchDailyData } from '../../api'\nimport { Line, Bar } from 'react-chartjs-2'\n\nimport styles from './Chart.module.css'\n\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) =>{\n    const [dailyData, setDailyData] = useState([])\n\n    useEffect(()=>{\n        const fetchAPI = async() =>{\n            setDailyData(await fetchDailyData())\n        }\n\n        // console.log(dailyData)\n\n        fetchAPI()\n    }, [])\n\n    const lineChart = (\n        dailyData.length\n        ?(\n        <Line \n        data = {{\n            labels: dailyData.map(({ date })=>date),\n            datasets: [{\n                data: dailyData.map(({ confirmed })=>confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true\n            }, {\n                data: dailyData.map(({ deaths })=>deaths),\n                label: 'deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255,0,0,0.5',\n                fill: true\n            }]\n        }}\n        />):null\n    )\n\n    const barChart = (\n        confirmed\n        ? (\n            <Bar \n            data={{\n                labels: ['Infected', 'Recovered', 'Deaths'],\n                datasets:[{\n                    label: 'People',\n                    backgroundColor: [\n                        'rgba(0,0,255,0.5)', \n                        'rgba(0,255,0,0.5)', \n                        'rgba(255,0,0,0.5)'\n                    ],\n                    data: [confirmed.value, recovered.value, deaths.value]\n                }]\n            }}\n            options={{\n                legend:{ display: false },\n                title: { display: true, text: `Current state in ${country}`}\n            }}\n            />\n        ): null\n    )\n    \n    return(\n        <div className={styles.container}>\n            {country? barChart: lineChart}\n        </div>\n    )\n}\n\nexport default Chart","import React, { useState, useEffect } from 'react'\nimport { NativeSelect, FormControl } from '@material-ui/core'\n\nimport styles from './CountryPicker.module.css'\n\nimport { fetchCountries } from '../../api'\n\nconst CountryPicker = ({handleCountryChange}) =>{\n\n    const [fetchedCountries, setFetchedCountries] = useState([])\n\n    useEffect(()=>{\n        const fetchAPI = async () =>{\n            setFetchedCountries(await fetchCountries())\n        }\n\n        fetchAPI()\n    },[setFetchedCountries])\n    // console.log(fetchedCountries)\n    return(\n        <FormControl className={styles.FormControl}>\n            <NativeSelect defaultValue =\"\" onChange={(e)=>{handleCountryChange(e.target.value)}}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i)=><option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker","import React from 'react'\n\nimport { Cards, Chart, CountryPicker } from './components'\nimport styles from './App.module.css'\nimport { fetchData } from './api'\n\nimport covidTrackerImage from './images/covid_tracker.png'\n\nclass App extends React.Component {\n    state = {\n        data: {}, \n        country: ''\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData()\n\n        this.setState({ data: fetchedData })\n    }\n\n    handleCountryChange = async(country)=>{\n        // fetch the data\n        const fetchedData = await fetchData(country)\n        // set the state\n        this.setState({ data: fetchedData, country: country })\n    }\n\n    render(){\n        const { data, country } = this.state\n\n        return(\n            <div className={styles.container}>\n                <img className={styles.image} src={covidTrackerImage} alt=\"covid-19\"/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/covid_tracker.d7265326.png\";"],"sourceRoot":""}